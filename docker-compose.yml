
version: '3'

services:

    mysql:
      image: mysql:latest
      container_name: mysql-container
      restart: unless-stopped
      ports:
        - '${FORWARD_DB_PORT:-3306}:3306'
      environment:
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ROOT_HOST: '${DB_HOST}'
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
      volumes:
        - 'docker-mysql:/var/lib/mysql:rw'
      networks:
        - docker-network
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
        retries: 3
        timeout: 5s

    app:
      build:
        context: .
        dockerfile: .docker/php/8.2/Dockerfile
        args:
          user: djonathan
          uid: 1000
          PHP_VERSION: ${PHP_VERSION:-8.2}
          COMPOSER_VERSION: ${COMPOSER_VERSION:-latest}
      container_name: php82-container
      restart: unless-stopped
      ports:
        - "9000:9000"
      volumes:
        - .:/var/www/html
        - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      working_dir: /var/www/html
      depends_on:
        - mysql
      links:
          - mysql:mysql
      networks:
        - docker-network

    nginx:
      image: nginx:stable-alpine
      restart: unless-stopped
      container_name: nginx-container
      ports:
        - ${APP_PORT-8081}:80
      volumes:
        - .:/var/www/html
        - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      working_dir: /var/www/html
      depends_on:
        - app
      networks:
         - docker-network
networks:
    docker-network:
      driver: bridge
volumes:
    docker-mysql:
      driver: local
